name: Send Email Notification

on:
  repository_dispatch:
    types: pipeline-execution

jobs:
  send-email:
    runs-on: ubuntu-latest

    steps:
      - name: Print Payload
        run: |
          echo "Received payload:"
          echo "${{ toJson(github.event.client_payload) }}"

      - name: Send Email Notification
        if: ${{ github.event.client_payload.status == 'success' }}
        env:
          SMTP_SERVER: smtp.example.com  # Replace with your SMTP server address
          SMTP_PORT: 587  # Replace with your SMTP server port
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}  # Replace with your SMTP username stored in GitHub Secrets
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}  # Replace with your SMTP password stored in GitHub Secrets
          EMAIL_TO: wasifali.github@gmail.com  # Replace with the recipient email address
        run: |
          echo "Pipeline executed successfully. Sending email notification..."
          python3 -m smtpd -n -c DebuggingServer localhost:1025 &  # Start a local SMTP debugging server (for testing)
          python3 -c "import smtplib; \
                      from email.mime.text import MIMEText; \
                      msg = MIMEText('Pipeline executed successfully.'); \
                      msg['Subject'] = 'Pipeline Success Notification'; \
                      msg['From'] = '${{ secrets.SMTP_USERNAME }}'; \
                      msg['To'] = '${{ env.EMAIL_TO }}'; \
                      s = smtplib.SMTP('${{ env.SMTP_SERVER }}', port=${{ env.SMTP_PORT }}); \
                      s.starttls(); \
                      s.login('${{ env.SMTP_USERNAME }}', '${{ env.SMTP_PASSWORD }}'); \
                      s.send_message(msg); \
                      s.quit();"
